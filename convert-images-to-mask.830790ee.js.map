{"version":3,"sources":["../tangled/convert-images-to-mask.ts"],"names":[],"mappings":"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","file":"convert-images-to-mask.830790ee.js","sourceRoot":"../exported","sourcesContent":["import('https://unpkg.com/wasm-imagemagick/dist/bundles/magickApi.js').then(Magick => {\n    async function fetchImage(url: string) {\n        const image = await fetch(url, {\n            headers: {\n                'Sec-Fetch-Dest': 'image'\n            }\n        });\n        return new Uint8Array(await image.arrayBuffer())\n    }\n\n    async function getProcessedImage(url: string) {\n        const image = document.createElement('img');\n\n        const processed = await Magick.Call([\n            await Magick.buildInputFile(url, 'in.png')\n        ], [\n            //Let's initialise the image\n            'convert', 'in.png', '-bordercolor', 'white', '-border', '1x1',\n            // Set Alpha to most of the image\n            '-alpha', 'set', '-channel', 'RGBA', '-fuzz', '20%',\n            // Fill the image with white\n            '-fill', 'none', '-floodfill', '+0+0', 'white',\n            // Clean and set transparent\n            '-shave', '1x1', '-transparent', 'white',\n            // Increase the saturation\n            '-level', '30%',\n\n            // Convert to grey\n            '-modulate', '100,0',\n            '-channel', 'RGBA', '-transparent', 'white',\n\n            '-evaluate', 'Divide', '1.5',\n            // Export\n            'out.png',\n        ]);\n\n        const processed_grey = await Magick.Call([\n            { name: 'in.png', content: processed[0]['buffer'] }\n        ], [\n            'convert', 'in.png',\n            // Convert to grey\n            '-modulate', '100,0',\n            '-channel', 'RGB',\n            '-threshold', '80%',\n            '-channel', 'RGBA', '-transparent', 'white',\n            'out.png'\n        ]);\n\n        const firstImage = processed[0];\n        image.src = URL.createObjectURL(firstImage['blob']);\n\n        return image;\n    }\n\n\n    async function init() {\n        const img = document.querySelector('img[alt=\"machine.png\"]').src\n        const image = await getProcessedImage(img);\n        document.getElementById('demo').appendChild(image);\n\n    }\n\n    init();\n});\n"]}