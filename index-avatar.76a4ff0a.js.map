{"version":3,"sources":["src/index-avatar.tsx"],"names":[],"mappings":"AAIA,IAAM,eAAe,GAAG,QAAQ,CAAC,cAAT,CAAwB,SAAxB,CAAxB;AACA,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAT,CAAuB,gBAAvB,CAAhB;AACA,IAAM,IAAI,GAAG,OAAO,CAAC,aAAR,CAAsB,OAAtB,CAAb;AACA,IAAM,UAAU,GAAG,OAAO,CAAC,aAAR,CAAsB,GAAtB,CAAnB;AAEA,IAAM,iBAAiB,GAAG,MAAM,CAAC,WAAjC,EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,OAAT,CAAiB,KAAjB,EAA4B,KAA5B,EAAwC,IAAxC,EAAkD,EAAlD,EAA2D,IAA3D,EAAmE;AAAlD,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAS;;AAAE,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,EAAA;AAAU;;AAAE,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAQ;;AAAE,MAAA,EAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,EAAA,GAAA,EAAA;AAAO;;AAAE,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAQ;;AACjE,MAAM,UAAU,GAAI,CAAC,KAAK,GAAG,KAAT,IAAkB,GAAnB,GAA0B,KAA7C;AACA,MAAM,gBAAgB,GAAI,CAAC,IAAI,GAAG,EAAR,IAAc,GAAf,IAAuB,IAAI,GAAG,EAA9B,CAAzB;AACA,MAAM,MAAM,GAAI,UAAU,GAAG,gBAAd,GAAkC,IAAjD;AAEA,SAAO,MAAM,GAAG,CAAT,GAAa,MAAM,GAAG,CAAC,CAAvB,GAA2B,MAAlC;AACD;;AAED,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,YAAA;AAChC,SAAA,MAAM,CAAC,qBAAP,CAA6B,YAAA;AACrB,QAAA,EAAA,GAAA,OAAA,CAAA,qBAAA,EAAA;AAAA,QAAE,GAAA,GAAA,EAAA,CAAA,GAAF;AAAA,QAAO,MAAA,GAAA,EAAA,CAAA,MAAP;;AAEN,QAAM,GAAG,GAAG,CAAZ;AACA,QAAM,GAAG,GAAG,CAAZ;AAEA,QAAM,UAAU,GAAG,MAAM,CAAC,WAAP,GAAqB,CAAxC;AACA,QAAM,MAAM,GAAG,GAAG,GAAG,OAAO,CAAC,YAA7B,CAP2B,CAQ3B;;AACA,QAAM,IAAI,GACR,OAAO,CAAC,MAAD,EAAS,iBAAiB,GAAG,GAA7B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,GAAxC,CAAP,CAAoD,OAApD,CAA4D,CAA5D,IAAiE,GADnE;AAGA,IAAA,OAAO,CAAC,KAAR,CAAc,MAAd,GAAuB,WAAQ,IAAI,IAAI,GAAG,CAAC,GAAZ,GAAkB,CAA1B,IAA2B,KAAlD;AACA,IAAA,OAAO,CAAC,KAAR,CAAc,OAAd,GAAwB,CAAC,IAAI,IAAI,GAAG,EAAZ,IAAkB,GAA1C;AAEA,IAAA,IAAI,CAAC,KAAL,CAAW,SAAX,GAAuB,iBAAc,KAAK,IAAI,GAAG,EAA1B,IAA4B,KAAnD;AACA,IAAA,UAAU,CAAC,KAAX,CAAiB,SAAjB,GAA6B,iBAAc,KAAK,IAAI,GAAG,EAA1B,IAA4B,KAAzD;AACD,GAjBD,CAAA;AAiBE,CAlBJ","file":"index-avatar.76a4ff0a.js","sourceRoot":"../exported","sourcesContent":["import * as React from \"react\";\nimport { Halftone } from \"@ideable/component-halftone\";\nimport { hydrate, render } from \"react-dom\";\n\nconst HalftoneElement = document.getElementById(\"profile\");\nconst landing = document.querySelector(\".landing--word\");\nconst word = landing.querySelector(\".word\");\nconst definition = landing.querySelector(\"p\");\n\nconst windowInnerHeight = window.innerHeight;\n\n// So we want to detect if a element is in the middle\n// of the screen, with that we want to trigger some parallax\n// so that the scrolling, with some margins can give animation to an element\n// +-------------------+\n// | The page          |\n// +-------------------+\n// |                   |\n// |  The view port    |\n// |                   |\n// | +---------------+ |\n// +-+---------------+-+\n// | |               | |\n// | |  Our element  | |\n// | |               | |\n// | +---------------+ |\n// |                   |\n// +-------------------+\n//\n// The page with might be irrelevant let's explore the options\n// Viewport can be rapresented by\n// top: current top scrolling position\n// bottom: the top + the height of the viewport\n//\n// Element has the following properties\n// top: from getBoundingClientRect().top the current position relative to viewport\n// bottom: from getBoundingClientRect().bottom the current position relative to viewport\n//\n// So lets plot a scenario\n// We have a viewport of { top: 10, bottom: 20 } The height of viewport is 10.\n// Then we have our element at { top: 20, bottom: 30  } The height of the element is same as the viewport.\n// We then want to have a blur of 5px and when the element is at the center we want to have of 0px\n//\n// The first thing is to make sure that the element is in the viewport\n// if (bottom >= top ) is visible from bottom\n// then we now that the blur should be 5px\n// Although when viewport becomes { top: 15, bottom: 25 }\n// and the elements becomes { top: 0, bottom: 10 } the blur should be 0px\n// To invert this calculation we could do\n// (heightOfTheWindow - (topOfTheElement+heightOfTheWindow)) so in our case if is visible 10-10 but if\n// not in window\n\nfunction getStep(input = 0, total = 10, from = 0, to = 10, step = 1) {\n  const percentage = ((total - input) * 100) / total;\n  const inStepPercentage = ((from - to) * 100) / (from - to);\n  const inStep = (percentage / inStepPercentage) * step;\n\n  return inStep < 0 ? inStep * -1 : inStep;\n}\n\nwindow.addEventListener(\"scroll\", () =>\n  window.requestAnimationFrame(() => {\n    const { top, bottom } = landing.getBoundingClientRect();\n\n    const max = 0;\n    const min = 5;\n\n    const halfWindow = window.innerHeight / 2;\n    const middle = top + landing.clientHeight;\n    // ((input - min) * 100) / (max - min)\n    const step =\n      getStep(middle, windowInnerHeight - 100, 0, 5, 0.1).toFixed(3) * 100;\n\n    landing.style.filter = `blur(${1 - step * -1.5 - 4}px)`;\n    landing.style.opacity = (1 - step / 10) * 1.4;\n\n    word.style.transform = `translateX(${20 - step * 10}px)`;\n    definition.style.transform = `translateX(${20 + step * 10}px)`;\n  })\n);\n"]}